#!/usr/bin/env bash
# Purpose: Generates the README.adoc and do some other things.
# References:
#   Ref1: https://stackoverflow.com/a/46083970[Insert newline (\n) using sed^]
#   Ref2: https://unix.stackexchange.com/a/17405[Print lines between (and excluding) two patterns^]
#
set -eou pipefail
cd "$(dirname "$0")"

cat > README.adoc <<EOF
= Git labs
{localdatetime}
:icons: font
:toc:
:toc-placement!:
:nofooter:
ifdef::env-github,env-browser[:outfilesuffix: .adoc]

Some labs demonstrating Git, GitHub or GitLab features or solutions.

ifdef::env-github[]
Please read the entire content of this link:README.adoc[] (and other link:docs[]) through the https://gitlab.com/paulojeronimo/git-labs[GitLab mirror of this project^]. +
This is because https://github.com/github/markup/issues/1095[GitHub does not render \`includes\` in Asciidoc documents correctly^]. ðŸ˜’
endif::[]

ifndef::env-github[]
// AsciiDoc URIs and Attributes (a shared project)
include::asciidoc-una/uris.adoc[]
include::asciidoc-una/attributes.adoc[]

Currently, these labs are written in {Bash}, and using tools available in macOS and Linux distros like {Git} (of course), {sed}, {awk}, {rsync}, etc.

This is an {open-source} project ({MITLicense}). +
<<docs/contribution-guidelines#,Contributions>> are welcome! ðŸ˜ƒ +
Fell free fork {uri-paulojeronimo-git-labs}[this repo^], add your lab, and {uri-github-creating-a-pull-request-from-a-fork}[make a pull request^] to add it.

WARNING: This HTML is generated by link:README.adoc[] which, in turns, is generated by link:build.sh[] script.
So, do not edit \`README.adoc\` directly because it will be overwritten!

ifdef::env-gitlab[]
WARNING: This repo is a mirror of {uri-paulojeronimo-git-labs}.
So, it is not maintained directly here, in GitLab.
All changes to this repo occur firstly in GitHub.
Why we have this mirror in GitLab?
Well, GitHub does not render Asciidoc documents correctly as Gitlab does.
You can note, for example, that the clause \`includes\` in Asciidoc does not work in GitHub.
endif::[]
endif::[]

Labs:

[%reversed]
$(for f in `ls lab???.sh | sort -r`
  do
    d=$(git log --diff-filter=A --follow --format=%aI -1 -- $f)
    # Ref1: used in the next 3 lines
    sed -n '2p' $f | sed -E "s/^# Purpose: (.*)/\
. link:$f[]: \1\\
.. Created in $d/"
  done)
EOF

adoc_args="-o index.html"
while [ "${1:-}" ]
do
  case "${1:-}" in
    --github)
      # Simulates the GitHub generated README.adoc
      adoc_args="-a env-github $adoc_args"
      ;;
    --gitlab)
      # Simulates the GitLab generated README.adoc
      adoc_args="-a env-gitlab $adoc_args"
      ;;
    --html)
      asciidoctor README.adoc $adoc_args
      cat > docs/index.adoc <<EOF
= docs
:nofooter:

$(cd docs; for f in $(find . -maxdepth 1 -name '*.adoc' ! -name index.adoc)
  do
    html=${f%.adoc}.html
    echo "* link:$html[$html]"
  done)
EOF
      for f in docs/*.adoc; do asciidoctor $f; done
      ;;
    --serve)
      ruby -run -e httpd . -p 8000 &> httpd.log &
      echo $! > httpd.pid
      ;;
    --references)
      # TODO:
      #   - List all references used by all the scripts inside this project

      # Ref2: used in the next line
      sed '1,/^# References:$/d;/^#$/,$d' build.sh
      exit 0
      ;;
    *)
      echo "Invalid argument: \"${1:-}\""
      exit 1
      ;;
  esac
  shift || :
done
